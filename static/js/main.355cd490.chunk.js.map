{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","card","id","alt","name","CardList","cards","map","SearchBox","placeholder","handleChange","type","onChange","App","state","fruits","searchText","fetch","then","response","json","users","setState","this","filteredFruits","filter","fruit","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,KAAKC,GAArC,0BAAiEC,IAAI,YAC7E,6BAAKL,EAAMG,KAAKG,OAChB,qDCJOC,EAAW,SAACP,GACvB,OAAO,qBAAKC,UAAU,YAAf,SACJD,EAAMQ,MAAMC,KAAI,SAAAN,GAAI,OACnB,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,UCJTM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBAAOX,UAAU,SAASY,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCuD/DG,G,wDAhCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,OAAQ,GACRC,WAAY,IALF,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEP,OAAQM,S,oBAG3C,WAAU,IAAD,OACP,EAA6BE,KAAKT,MAA3BC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,WACTQ,EAAiBT,EAAOU,QAAO,SAAAC,GACnC,OAAOA,EAAMtB,KAAKuB,cAAcC,SAASZ,EAAWW,kBAEtD,OACE,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,CAAWU,YAAY,SAASC,aAC9B,SAAAmB,GAAC,OAAI,EAAKP,SAAS,CAACN,WAAYa,EAAEC,OAAOC,WAE3C,cAAC,EAAD,CAAUzB,MAAOkB,W,GA1BPQ,cCdHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.355cd490.chunk.js","sourcesContent":["import React from \"react\";\nimport './card-styles.css';\n\nexport const Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <img src={`https://robohash.org/${props.card.id}?set=set2&size=180x180`} alt=\"monster\" />\n      <h1>{props.card.name}</h1>\n      <p>props.card.email</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport './card-list.styles.css';\nimport { Card } from '../card/card.component'\n\nexport const CardList = (props) => {\n  return <div className=\"card-list\">\n    {props.cards.map(card => (\n      <Card key={card.id} card={card}/>\n    ))}\n  </div>;\n};\n","import React from \"react\";\nimport './searchbox.styles.css'\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange} />\n);\n","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/searchbox/searchbox.component'\nimport './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      fruits: [],\n      searchText: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ fruits: users }))\n  }\n\n  render() {\n    const {fruits, searchText} = this.state;\n    const filteredFruits = fruits.filter(fruit => {\n      return fruit.name.toLowerCase().includes(searchText.toLowerCase())\n    });\n    return (\n      <div className=\"App\">\n        <SearchBox placeholder=\"Search\" handleChange={\n          e => this.setState({searchText: e.target.value})\n        } />\n        <CardList cards={filteredFruits} />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}